#!/usr/bin/env groovy
/**
 * Simple FTP Server
 *
 * Usage:
 *   anonymous user and share current directory
 *   $ ftpserver
 *
 *   full option example
 *   $ ftpserver --port 21 -u ftpuser -p Passw0rd! -d /path/to/dir
 */

@Grab('org.apache.ftpserver:ftpserver-core:1.0.6')
@Grab('org.slf4j:slf4j-api:1.7.12')
@Grab('org.slf4j:slf4j-simple:1.7.12')

import org.apache.ftpserver.ConnectionConfigFactory
import org.apache.ftpserver.FtpServerFactory
import org.apache.ftpserver.listener.ListenerFactory
import org.apache.ftpserver.usermanager.PropertiesUserManagerFactory
import org.apache.ftpserver.usermanager.SaltedPasswordEncryptor
import org.apache.ftpserver.usermanager.impl.BaseUser
import org.apache.ftpserver.usermanager.impl.WritePermission

def cli = new CliBuilder(usage:'ftpserver [options]', header:'Options:')
cli.with {
    _ longOpt: 'port', argName: 'port', args: 1, 'specify port number'
    u argName: 'username', args: 1, 'specify username. default is "user"'
    p argName: 'password', args: 1, 'specify password. default is "password"'
    d argName: 'home directory', args: 1, 'specify home directory. default is current directory'
    h longOpt: 'help', 'show help'
}

def options = cli.parse(args)
if (!options) return

if (options.h) {
    cli.usage()
    return
}

// options setting
def port = options.port ? options.port.toInteger(): 2121
def username = options.u ?: 'anonymous'
def password = options.p ?: ''
def directory = options.d ?: '.'

def serverFactory = new FtpServerFactory()
def configFactory = new ConnectionConfigFactory()
configFactory.setAnonymousLoginEnabled(true)
serverFactory.setConnectionConfig(configFactory.createConnectionConfig())

// add user
def userManagerFactory = new PropertiesUserManagerFactory()
userManagerFactory.setPasswordEncryptor(new SaltedPasswordEncryptor())
def userManager = userManagerFactory.createUserManager()
BaseUser user = new BaseUser()

user.with {
    setName username
    setPassword password
    setHomeDirectory directory
    setAuthorities([new WritePermission()])
}
userManager.save(user)
serverFactory.setUserManager(userManager)

// create listener
ListenerFactory listenerFactory = new ListenerFactory()
listenerFactory.port = port
serverFactory.addListener("default", listenerFactory.createListener())

// ftp server start
def server = serverFactory.createServer()
server.start()

println 'Press Ctrl+C to stop.'

